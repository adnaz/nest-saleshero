# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type App {
  id: ID!
  name: String
  author: User
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  id: ID!
  order: Float
  title: String!
  content: String
  published: Boolean
  author: User
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserCount {
  apps: Int!
  posts: Int!
  courses: Int!
  sections: Int!
}

type User {
  id: ID!
  email: String!
  username: String
  name: String
  apps: [App!]
  posts: [Post!]
  courses: [Course!]
  sections: [Section!]
  role: Role!
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: UserCount!
}

enum Role {
  USER
  ADMIN
}

type SectionCount {
  replies: Int!
}

type Section {
  id: ID!
  order: Float
  title: String!
  description: String
  image: File
  imageId: Int
  type: TypeSection
  course: Course
  courseId: Int
  replies: [Reply!]
  published: Boolean
  author: User
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: SectionCount!
}

enum TypeSection {
  CHAT
  ARTICLE
}

type ActorCount {
  replies: Int!
}

type Actor {
  id: ID!
  name: String
  avatar: File
  fileId: Int
  replies: [Reply!]
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: ActorCount!
}

type QuickReplyValue {
  id: ID!
  title: String
  value: String
  quickReply: QuickReply
  quickReplyId: Int
}

type QuickReplyCount {
  values: Int!
}

type QuickReply {
  id: ID!
  reply: Reply
  keepIt: Boolean
  type: TypeReply
  values: [QuickReplyValue!]
  _count: QuickReplyCount!
}

enum TypeReply {
  checkbox
  radio
}

type Reply {
  id: ID!
  order: Float
  file: File
  fileId: Int
  text: String
  reply: String
  createdAt: DateTime!
  updatedAt: DateTime!
  section: Section
  sectionId: Int
  user: Actor
  actorId: Int
  quickReply: QuickReply
  quickReplyId: Int
}

type File {
  id: ID!
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  reply: Reply
  actor: Actor
  courseImage: Course
  courseAudio: Course
  section: Section
  createdAt: DateTime!
  updatedAt: DateTime!
  type: TypeFile
}

enum TypeFile {
  AUDIO
  IMAGE
  VIDEO
}

type CourseCount {
  sections: Int!
}

type Course {
  id: ID!
  order: Float
  title: String!
  description: String
  audio: File
  audioId: Int
  image: File
  imageId: Int
  sections: [Section!]
  published: Boolean
  author: User
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: CourseCount!
}

type Query {
  courses(where: CourseWhereInput, orderBy: [CourseOrderByWithRelationInput!], cursor: CourseWhereUniqueInput, take: Int, skip: Int, distinct: [CourseScalarFieldEnum!]): [Course!]!
  course(id: Int!): Course!
  whoAmI: User!
  users(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]!
  user(id: Int!): User!
  posts(where: PostWhereInput, orderBy: [PostOrderByWithRelationInput!], cursor: PostWhereUniqueInput, take: Int, skip: Int, distinct: [PostScalarFieldEnum!]): [Post!]!
  post(id: Int!): Post!
  files(where: FileWhereInput, orderBy: [FileOrderByWithRelationInput!], cursor: FileWhereUniqueInput, take: Int, skip: Int, distinct: [FileScalarFieldEnum!]): [File!]!
  file(id: Int!): File!
  actors(where: ActorWhereInput, orderBy: [ActorOrderByWithRelationInput!], cursor: ActorWhereUniqueInput, take: Int, skip: Int, distinct: [ActorScalarFieldEnum!]): [Actor!]!
  actor(id: Int!): Actor!
  sections(where: SectionWhereInput, orderBy: [SectionOrderByWithRelationInput!], cursor: SectionWhereUniqueInput, take: Int, skip: Int, distinct: [SectionScalarFieldEnum!]): [Section!]!
  section(id: Int!): Section!
  replies(where: ReplyWhereInput, orderBy: [ReplyOrderByWithRelationInput!], cursor: ReplyWhereUniqueInput, take: Int, skip: Int, distinct: [ReplyScalarFieldEnum!]): [Reply!]!
  reply(id: Int!): Reply!
  quickReplies(where: QuickReplyWhereInput, orderBy: [QuickReplyOrderByWithRelationInput!], cursor: QuickReplyWhereUniqueInput, take: Int, skip: Int, distinct: [QuickReplyScalarFieldEnum!]): [QuickReply!]!
  quickReply(id: Int!): QuickReply!
  quickReplyValues(where: QuickReplyValueWhereInput, orderBy: [QuickReplyValueOrderByWithRelationInput!], cursor: QuickReplyValueWhereUniqueInput, take: Int, skip: Int, distinct: [QuickReplyValueScalarFieldEnum!]): [QuickReplyValue!]!
  quickReplyValue(id: Int!): QuickReplyValue!
  apps(where: AppWhereInput, orderBy: [AppOrderByWithRelationInput!], cursor: AppWhereUniqueInput, take: Int, skip: Int, distinct: [AppScalarFieldEnum!]): [App!]!
  app(id: Int!): App!
}

input CourseWhereInput {
  AND: [CourseWhereInput!]
  OR: [CourseWhereInput!]
  NOT: [CourseWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  description: StringNullableFilter
  audio: FileRelationFilter
  audioId: IntNullableFilter
  image: FileRelationFilter
  imageId: IntNullableFilter
  sections: SectionListRelationFilter
  published: BoolNullableFilter
  author: UserRelationFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input FileRelationFilter {
  is: FileWhereInput
  isNot: FileWhereInput
}

input FileWhereInput {
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
  NOT: [FileWhereInput!]
  id: IntFilter
  name: StringNullableFilter
  link: StringNullableFilter
  location: StringNullableFilter
  key: StringNullableFilter
  bucket: StringNullableFilter
  etag: StringNullableFilter
  reply: ReplyRelationFilter
  actor: ActorRelationFilter
  courseImage: CourseRelationFilter
  courseAudio: CourseRelationFilter
  section: SectionRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  type: EnumTypeFileNullableFilter
}

input ReplyRelationFilter {
  is: ReplyWhereInput
  isNot: ReplyWhereInput
}

input ReplyWhereInput {
  AND: [ReplyWhereInput!]
  OR: [ReplyWhereInput!]
  NOT: [ReplyWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  file: FileRelationFilter
  fileId: IntNullableFilter
  text: StringNullableFilter
  reply: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  section: SectionRelationFilter
  sectionId: IntNullableFilter
  user: ActorRelationFilter
  actorId: IntNullableFilter
  quickReply: QuickReplyRelationFilter
  quickReplyId: IntNullableFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input SectionRelationFilter {
  is: SectionWhereInput
  isNot: SectionWhereInput
}

input SectionWhereInput {
  AND: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  description: StringNullableFilter
  image: FileRelationFilter
  imageId: IntNullableFilter
  type: EnumTypeSectionNullableFilter
  course: CourseRelationFilter
  courseId: IntNullableFilter
  replies: ReplyListRelationFilter
  published: BoolNullableFilter
  author: UserRelationFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input EnumTypeSectionNullableFilter {
  equals: TypeSection
  in: [TypeSection!]
  notIn: [TypeSection!]
  not: NestedEnumTypeSectionNullableFilter
}

input NestedEnumTypeSectionNullableFilter {
  equals: TypeSection
  in: [TypeSection!]
  notIn: [TypeSection!]
  not: NestedEnumTypeSectionNullableFilter
}

input CourseRelationFilter {
  is: CourseWhereInput
  isNot: CourseWhereInput
}

input ReplyListRelationFilter {
  every: ReplyWhereInput
  some: ReplyWhereInput
  none: ReplyWhereInput
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  email: StringFilter
  username: StringNullableFilter
  name: StringNullableFilter
  password: StringFilter
  apps: AppListRelationFilter
  posts: PostListRelationFilter
  courses: CourseListRelationFilter
  sections: SectionListRelationFilter
  role: EnumRoleFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input AppListRelationFilter {
  every: AppWhereInput
  some: AppWhereInput
  none: AppWhereInput
}

input AppWhereInput {
  AND: [AppWhereInput!]
  OR: [AppWhereInput!]
  NOT: [AppWhereInput!]
  id: IntFilter
  name: StringNullableFilter
  author: UserRelationFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PostListRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  content: StringNullableFilter
  published: BoolNullableFilter
  author: UserRelationFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input CourseListRelationFilter {
  every: CourseWhereInput
  some: CourseWhereInput
  none: CourseWhereInput
}

input SectionListRelationFilter {
  every: SectionWhereInput
  some: SectionWhereInput
  none: SectionWhereInput
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input ActorRelationFilter {
  is: ActorWhereInput
  isNot: ActorWhereInput
}

input ActorWhereInput {
  AND: [ActorWhereInput!]
  OR: [ActorWhereInput!]
  NOT: [ActorWhereInput!]
  id: IntFilter
  name: StringNullableFilter
  avatar: FileRelationFilter
  fileId: IntNullableFilter
  replies: ReplyListRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input QuickReplyRelationFilter {
  is: QuickReplyWhereInput
  isNot: QuickReplyWhereInput
}

input QuickReplyWhereInput {
  AND: [QuickReplyWhereInput!]
  OR: [QuickReplyWhereInput!]
  NOT: [QuickReplyWhereInput!]
  id: IntFilter
  reply: ReplyRelationFilter
  keepIt: BoolNullableFilter
  type: EnumTypeReplyNullableFilter
  values: QuickReplyValueListRelationFilter
}

input EnumTypeReplyNullableFilter {
  equals: TypeReply
  in: [TypeReply!]
  notIn: [TypeReply!]
  not: NestedEnumTypeReplyNullableFilter
}

input NestedEnumTypeReplyNullableFilter {
  equals: TypeReply
  in: [TypeReply!]
  notIn: [TypeReply!]
  not: NestedEnumTypeReplyNullableFilter
}

input QuickReplyValueListRelationFilter {
  every: QuickReplyValueWhereInput
  some: QuickReplyValueWhereInput
  none: QuickReplyValueWhereInput
}

input QuickReplyValueWhereInput {
  AND: [QuickReplyValueWhereInput!]
  OR: [QuickReplyValueWhereInput!]
  NOT: [QuickReplyValueWhereInput!]
  id: IntFilter
  title: StringNullableFilter
  value: StringNullableFilter
  quickReply: QuickReplyRelationFilter
  quickReplyId: IntNullableFilter
}

input EnumTypeFileNullableFilter {
  equals: TypeFile
  in: [TypeFile!]
  notIn: [TypeFile!]
  not: NestedEnumTypeFileNullableFilter
}

input NestedEnumTypeFileNullableFilter {
  equals: TypeFile
  in: [TypeFile!]
  notIn: [TypeFile!]
  not: NestedEnumTypeFileNullableFilter
}

input CourseOrderByWithRelationInput {
  id: SortOrder
  order: SortOrder
  title: SortOrder
  description: SortOrder
  audio: FileOrderByWithRelationInput
  audioId: SortOrder
  image: FileOrderByWithRelationInput
  imageId: SortOrder
  sections: SectionOrderByRelationAggregateInput
  published: SortOrder
  author: UserOrderByWithRelationInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

input FileOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  link: SortOrder
  location: SortOrder
  key: SortOrder
  bucket: SortOrder
  etag: SortOrder
  reply: ReplyOrderByWithRelationInput
  actor: ActorOrderByWithRelationInput
  courseImage: CourseOrderByWithRelationInput
  courseAudio: CourseOrderByWithRelationInput
  section: SectionOrderByWithRelationInput
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
}

input ReplyOrderByWithRelationInput {
  id: SortOrder
  order: SortOrder
  file: FileOrderByWithRelationInput
  fileId: SortOrder
  text: SortOrder
  reply: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  section: SectionOrderByWithRelationInput
  sectionId: SortOrder
  user: ActorOrderByWithRelationInput
  actorId: SortOrder
  quickReply: QuickReplyOrderByWithRelationInput
  quickReplyId: SortOrder
}

input SectionOrderByWithRelationInput {
  id: SortOrder
  order: SortOrder
  title: SortOrder
  description: SortOrder
  image: FileOrderByWithRelationInput
  imageId: SortOrder
  type: SortOrder
  course: CourseOrderByWithRelationInput
  courseId: SortOrder
  replies: ReplyOrderByRelationAggregateInput
  published: SortOrder
  author: UserOrderByWithRelationInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ReplyOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithRelationInput {
  id: SortOrder
  email: SortOrder
  username: SortOrder
  name: SortOrder
  password: SortOrder
  apps: AppOrderByRelationAggregateInput
  posts: PostOrderByRelationAggregateInput
  courses: CourseOrderByRelationAggregateInput
  sections: SectionOrderByRelationAggregateInput
  role: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input AppOrderByRelationAggregateInput {
  _count: SortOrder
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

input CourseOrderByRelationAggregateInput {
  _count: SortOrder
}

input SectionOrderByRelationAggregateInput {
  _count: SortOrder
}

input ActorOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  avatar: FileOrderByWithRelationInput
  fileId: SortOrder
  replies: ReplyOrderByRelationAggregateInput
  createdAt: SortOrder
  updatedAt: SortOrder
}

input QuickReplyOrderByWithRelationInput {
  id: SortOrder
  reply: ReplyOrderByWithRelationInput
  keepIt: SortOrder
  type: SortOrder
  values: QuickReplyValueOrderByRelationAggregateInput
}

input QuickReplyValueOrderByRelationAggregateInput {
  _count: SortOrder
}

input CourseWhereUniqueInput {
  id: Int
  audioId: Int
  imageId: Int
}

enum CourseScalarFieldEnum {
  id
  order
  title
  description
  audioId
  imageId
  published
  authorId
  createdAt
  updatedAt
}

input UserWhereUniqueInput {
  id: Int
  email: String
  username: String
}

enum UserScalarFieldEnum {
  id
  email
  username
  name
  password
  role
  createdAt
  updatedAt
}

input PostOrderByWithRelationInput {
  id: SortOrder
  order: SortOrder
  title: SortOrder
  content: SortOrder
  published: SortOrder
  author: UserOrderByWithRelationInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PostWhereUniqueInput {
  id: Int
}

enum PostScalarFieldEnum {
  id
  order
  title
  content
  published
  authorId
  createdAt
  updatedAt
}

input FileWhereUniqueInput {
  id: Int
}

enum FileScalarFieldEnum {
  id
  name
  link
  location
  key
  bucket
  etag
  createdAt
  updatedAt
  type
}

input ActorWhereUniqueInput {
  id: Int
  fileId: Int
}

enum ActorScalarFieldEnum {
  id
  name
  fileId
  createdAt
  updatedAt
}

input SectionWhereUniqueInput {
  id: Int
  imageId: Int
}

enum SectionScalarFieldEnum {
  id
  order
  title
  description
  imageId
  type
  courseId
  published
  authorId
  createdAt
  updatedAt
}

input ReplyWhereUniqueInput {
  id: Int
  fileId: Int
  quickReplyId: Int
}

enum ReplyScalarFieldEnum {
  id
  order
  fileId
  text
  reply
  createdAt
  updatedAt
  sectionId
  actorId
  quickReplyId
}

input QuickReplyWhereUniqueInput {
  id: Int
}

enum QuickReplyScalarFieldEnum {
  id
  keepIt
  type
}

input QuickReplyValueOrderByWithRelationInput {
  id: SortOrder
  title: SortOrder
  value: SortOrder
  quickReply: QuickReplyOrderByWithRelationInput
  quickReplyId: SortOrder
}

input QuickReplyValueWhereUniqueInput {
  id: Int
}

enum QuickReplyValueScalarFieldEnum {
  id
  title
  value
  quickReplyId
}

input AppOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  author: UserOrderByWithRelationInput
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input AppWhereUniqueInput {
  id: Int
}

enum AppScalarFieldEnum {
  id
  name
  authorId
  createdAt
  updatedAt
}

type Mutation {
  createCourse(courseCreateInput: CourseCreateInput!): Course!
  updateCourse(data: CourseUpdateInput!, where: CourseWhereUniqueInput!): Course!
  removeCourse(id: Int!): Course!
  createUser(userCreateInput: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  removeUser(id: Int!): User!
  createPost(postCreateInput: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post!
  removePost(id: Int!): Post!
  createFile(fileCreateInput: FileCreateInput!): File!
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File!
  removeFile(id: Int!): File!
  createActor(actorCreateInput: ActorCreateInput!): Actor!
  updateActor(data: ActorUpdateInput!, where: ActorWhereUniqueInput!): Actor!
  removeActor(id: Int!): Actor!
  createSection(sectionCreateInput: SectionCreateInput!): Section!
  updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section!
  removeSection(id: Int!): Section!
  createReply(replyCreateInput: ReplyCreateInput!): Reply!
  updateReply(data: ReplyUpdateInput!, where: ReplyWhereUniqueInput!): Reply!
  removeReply(id: Int!): Reply!
  createQuickReply(quickReplyCreateInput: QuickReplyCreateInput!): QuickReply!
  updateQuickReply(data: QuickReplyUpdateInput!, where: QuickReplyWhereUniqueInput!): QuickReply!
  removeQuickReply(id: Int!): QuickReply!
  createQuickReplyValue(quickReplyValueCreateInput: QuickReplyValueCreateInput!): QuickReplyValue!
  updateQuickReplyValue(data: QuickReplyValueUpdateInput!, where: QuickReplyValueWhereUniqueInput!): QuickReplyValue!
  removeQuickReplyValue(id: Int!): QuickReplyValue!
  createApp(appCreateInput: AppCreateInput!): App!
  updateApp(data: AppUpdateInput!, where: AppWhereUniqueInput!): App!
  removeApp(id: Int!): App!
}

input CourseCreateInput {
  order: Float
  title: String!
  description: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  audio: FileCreateNestedOneWithoutCourseAudioInput
  image: FileCreateNestedOneWithoutCourseImageInput
  sections: SectionCreateNestedManyWithoutCourseInput
  author: UserCreateNestedOneWithoutCoursesInput
}

input FileCreateNestedOneWithoutCourseAudioInput {
  create: FileCreateWithoutCourseAudioInput
  connectOrCreate: FileCreateOrConnectWithoutCourseAudioInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutCourseAudioInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  reply: ReplyCreateNestedOneWithoutFileInput
  actor: ActorCreateNestedOneWithoutAvatarInput
  courseImage: CourseCreateNestedOneWithoutImageInput
  section: SectionCreateNestedOneWithoutImageInput
}

input ReplyCreateNestedOneWithoutFileInput {
  create: ReplyCreateWithoutFileInput
  connectOrCreate: ReplyCreateOrConnectWithoutFileInput
  connect: ReplyWhereUniqueInput
}

input ReplyCreateWithoutFileInput {
  order: Float
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  section: SectionCreateNestedOneWithoutRepliesInput
  user: ActorCreateNestedOneWithoutRepliesInput
  quickReply: QuickReplyCreateNestedOneWithoutReplyInput
}

input SectionCreateNestedOneWithoutRepliesInput {
  create: SectionCreateWithoutRepliesInput
  connectOrCreate: SectionCreateOrConnectWithoutRepliesInput
  connect: SectionWhereUniqueInput
}

input SectionCreateWithoutRepliesInput {
  order: Float
  title: String!
  description: String
  type: TypeSection
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  image: FileCreateNestedOneWithoutSectionInput
  course: CourseCreateNestedOneWithoutSectionsInput
  author: UserCreateNestedOneWithoutSectionsInput
}

input FileCreateNestedOneWithoutSectionInput {
  create: FileCreateWithoutSectionInput
  connectOrCreate: FileCreateOrConnectWithoutSectionInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutSectionInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  reply: ReplyCreateNestedOneWithoutFileInput
  actor: ActorCreateNestedOneWithoutAvatarInput
  courseImage: CourseCreateNestedOneWithoutImageInput
  courseAudio: CourseCreateNestedOneWithoutAudioInput
}

input ActorCreateNestedOneWithoutAvatarInput {
  create: ActorCreateWithoutAvatarInput
  connectOrCreate: ActorCreateOrConnectWithoutAvatarInput
  connect: ActorWhereUniqueInput
}

input ActorCreateWithoutAvatarInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  replies: ReplyCreateNestedManyWithoutUserInput
}

input ReplyCreateNestedManyWithoutUserInput {
  create: [ReplyCreateWithoutUserInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutUserInput!]
  createMany: ReplyCreateManyUserInputEnvelope
  connect: [ReplyWhereUniqueInput!]
}

input ReplyCreateWithoutUserInput {
  order: Float
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  file: FileCreateNestedOneWithoutReplyInput
  section: SectionCreateNestedOneWithoutRepliesInput
  quickReply: QuickReplyCreateNestedOneWithoutReplyInput
}

input FileCreateNestedOneWithoutReplyInput {
  create: FileCreateWithoutReplyInput
  connectOrCreate: FileCreateOrConnectWithoutReplyInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutReplyInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  actor: ActorCreateNestedOneWithoutAvatarInput
  courseImage: CourseCreateNestedOneWithoutImageInput
  courseAudio: CourseCreateNestedOneWithoutAudioInput
  section: SectionCreateNestedOneWithoutImageInput
}

input CourseCreateNestedOneWithoutImageInput {
  create: CourseCreateWithoutImageInput
  connectOrCreate: CourseCreateOrConnectWithoutImageInput
  connect: CourseWhereUniqueInput
}

input CourseCreateWithoutImageInput {
  order: Float
  title: String!
  description: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  audio: FileCreateNestedOneWithoutCourseAudioInput
  sections: SectionCreateNestedManyWithoutCourseInput
  author: UserCreateNestedOneWithoutCoursesInput
}

input SectionCreateNestedManyWithoutCourseInput {
  create: [SectionCreateWithoutCourseInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutCourseInput!]
  createMany: SectionCreateManyCourseInputEnvelope
  connect: [SectionWhereUniqueInput!]
}

input SectionCreateWithoutCourseInput {
  order: Float
  title: String!
  description: String
  type: TypeSection
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  image: FileCreateNestedOneWithoutSectionInput
  replies: ReplyCreateNestedManyWithoutSectionInput
  author: UserCreateNestedOneWithoutSectionsInput
}

input ReplyCreateNestedManyWithoutSectionInput {
  create: [ReplyCreateWithoutSectionInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutSectionInput!]
  createMany: ReplyCreateManySectionInputEnvelope
  connect: [ReplyWhereUniqueInput!]
}

input ReplyCreateWithoutSectionInput {
  order: Float
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  file: FileCreateNestedOneWithoutReplyInput
  user: ActorCreateNestedOneWithoutRepliesInput
  quickReply: QuickReplyCreateNestedOneWithoutReplyInput
}

input ActorCreateNestedOneWithoutRepliesInput {
  create: ActorCreateWithoutRepliesInput
  connectOrCreate: ActorCreateOrConnectWithoutRepliesInput
  connect: ActorWhereUniqueInput
}

input ActorCreateWithoutRepliesInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  avatar: FileCreateNestedOneWithoutActorInput
}

input FileCreateNestedOneWithoutActorInput {
  create: FileCreateWithoutActorInput
  connectOrCreate: FileCreateOrConnectWithoutActorInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutActorInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  reply: ReplyCreateNestedOneWithoutFileInput
  courseImage: CourseCreateNestedOneWithoutImageInput
  courseAudio: CourseCreateNestedOneWithoutAudioInput
  section: SectionCreateNestedOneWithoutImageInput
}

input CourseCreateNestedOneWithoutAudioInput {
  create: CourseCreateWithoutAudioInput
  connectOrCreate: CourseCreateOrConnectWithoutAudioInput
  connect: CourseWhereUniqueInput
}

input CourseCreateWithoutAudioInput {
  order: Float
  title: String!
  description: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  image: FileCreateNestedOneWithoutCourseImageInput
  sections: SectionCreateNestedManyWithoutCourseInput
  author: UserCreateNestedOneWithoutCoursesInput
}

input FileCreateNestedOneWithoutCourseImageInput {
  create: FileCreateWithoutCourseImageInput
  connectOrCreate: FileCreateOrConnectWithoutCourseImageInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutCourseImageInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  reply: ReplyCreateNestedOneWithoutFileInput
  actor: ActorCreateNestedOneWithoutAvatarInput
  courseAudio: CourseCreateNestedOneWithoutAudioInput
  section: SectionCreateNestedOneWithoutImageInput
}

input SectionCreateNestedOneWithoutImageInput {
  create: SectionCreateWithoutImageInput
  connectOrCreate: SectionCreateOrConnectWithoutImageInput
  connect: SectionWhereUniqueInput
}

input SectionCreateWithoutImageInput {
  order: Float
  title: String!
  description: String
  type: TypeSection
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  course: CourseCreateNestedOneWithoutSectionsInput
  replies: ReplyCreateNestedManyWithoutSectionInput
  author: UserCreateNestedOneWithoutSectionsInput
}

input CourseCreateNestedOneWithoutSectionsInput {
  create: CourseCreateWithoutSectionsInput
  connectOrCreate: CourseCreateOrConnectWithoutSectionsInput
  connect: CourseWhereUniqueInput
}

input CourseCreateWithoutSectionsInput {
  order: Float
  title: String!
  description: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  audio: FileCreateNestedOneWithoutCourseAudioInput
  image: FileCreateNestedOneWithoutCourseImageInput
  author: UserCreateNestedOneWithoutCoursesInput
}

input UserCreateNestedOneWithoutCoursesInput {
  create: UserCreateWithoutCoursesInput
  connectOrCreate: UserCreateOrConnectWithoutCoursesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCoursesInput {
  email: String!
  username: String
  name: String
  password: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  apps: AppCreateNestedManyWithoutAuthorInput
  posts: PostCreateNestedManyWithoutAuthorInput
  sections: SectionCreateNestedManyWithoutAuthorInput
}

input AppCreateNestedManyWithoutAuthorInput {
  create: [AppCreateWithoutAuthorInput!]
  connectOrCreate: [AppCreateOrConnectWithoutAuthorInput!]
  createMany: AppCreateManyAuthorInputEnvelope
  connect: [AppWhereUniqueInput!]
}

input AppCreateWithoutAuthorInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AppCreateOrConnectWithoutAuthorInput {
  where: AppWhereUniqueInput!
  create: AppCreateWithoutAuthorInput!
}

input AppCreateManyAuthorInputEnvelope {
  data: [AppCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input AppCreateManyAuthorInput {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PostCreateNestedManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  connect: [PostWhereUniqueInput!]
}

input PostCreateWithoutAuthorInput {
  order: Float
  title: String!
  content: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input PostCreateOrConnectWithoutAuthorInput {
  where: PostWhereUniqueInput!
  create: PostCreateWithoutAuthorInput!
}

input PostCreateManyAuthorInputEnvelope {
  data: [PostCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input PostCreateManyAuthorInput {
  id: Int
  order: Float
  title: String!
  content: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input SectionCreateNestedManyWithoutAuthorInput {
  create: [SectionCreateWithoutAuthorInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutAuthorInput!]
  createMany: SectionCreateManyAuthorInputEnvelope
  connect: [SectionWhereUniqueInput!]
}

input SectionCreateWithoutAuthorInput {
  order: Float
  title: String!
  description: String
  type: TypeSection
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  image: FileCreateNestedOneWithoutSectionInput
  course: CourseCreateNestedOneWithoutSectionsInput
  replies: ReplyCreateNestedManyWithoutSectionInput
}

input SectionCreateOrConnectWithoutAuthorInput {
  where: SectionWhereUniqueInput!
  create: SectionCreateWithoutAuthorInput!
}

input SectionCreateManyAuthorInputEnvelope {
  data: [SectionCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input SectionCreateManyAuthorInput {
  id: Int
  order: Float
  title: String!
  description: String
  imageId: Int
  type: TypeSection
  courseId: Int
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutCoursesInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutCoursesInput!
}

input CourseCreateOrConnectWithoutSectionsInput {
  where: CourseWhereUniqueInput!
  create: CourseCreateWithoutSectionsInput!
}

input UserCreateNestedOneWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  connectOrCreate: UserCreateOrConnectWithoutSectionsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSectionsInput {
  email: String!
  username: String
  name: String
  password: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  apps: AppCreateNestedManyWithoutAuthorInput
  posts: PostCreateNestedManyWithoutAuthorInput
  courses: CourseCreateNestedManyWithoutAuthorInput
}

input CourseCreateNestedManyWithoutAuthorInput {
  create: [CourseCreateWithoutAuthorInput!]
  connectOrCreate: [CourseCreateOrConnectWithoutAuthorInput!]
  createMany: CourseCreateManyAuthorInputEnvelope
  connect: [CourseWhereUniqueInput!]
}

input CourseCreateWithoutAuthorInput {
  order: Float
  title: String!
  description: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  audio: FileCreateNestedOneWithoutCourseAudioInput
  image: FileCreateNestedOneWithoutCourseImageInput
  sections: SectionCreateNestedManyWithoutCourseInput
}

input CourseCreateOrConnectWithoutAuthorInput {
  where: CourseWhereUniqueInput!
  create: CourseCreateWithoutAuthorInput!
}

input CourseCreateManyAuthorInputEnvelope {
  data: [CourseCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input CourseCreateManyAuthorInput {
  id: Int
  order: Float
  title: String!
  description: String
  audioId: Int
  imageId: Int
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutSectionsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSectionsInput!
}

input SectionCreateOrConnectWithoutImageInput {
  where: SectionWhereUniqueInput!
  create: SectionCreateWithoutImageInput!
}

input FileCreateOrConnectWithoutCourseImageInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutCourseImageInput!
}

input CourseCreateOrConnectWithoutAudioInput {
  where: CourseWhereUniqueInput!
  create: CourseCreateWithoutAudioInput!
}

input FileCreateOrConnectWithoutActorInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutActorInput!
}

input ActorCreateOrConnectWithoutRepliesInput {
  where: ActorWhereUniqueInput!
  create: ActorCreateWithoutRepliesInput!
}

input QuickReplyCreateNestedOneWithoutReplyInput {
  create: QuickReplyCreateWithoutReplyInput
  connectOrCreate: QuickReplyCreateOrConnectWithoutReplyInput
  connect: QuickReplyWhereUniqueInput
}

input QuickReplyCreateWithoutReplyInput {
  keepIt: Boolean
  type: TypeReply
  values: QuickReplyValueCreateNestedManyWithoutQuickReplyInput
}

input QuickReplyValueCreateNestedManyWithoutQuickReplyInput {
  create: [QuickReplyValueCreateWithoutQuickReplyInput!]
  connectOrCreate: [QuickReplyValueCreateOrConnectWithoutQuickReplyInput!]
  createMany: QuickReplyValueCreateManyQuickReplyInputEnvelope
  connect: [QuickReplyValueWhereUniqueInput!]
}

input QuickReplyValueCreateWithoutQuickReplyInput {
  title: String
  value: String
}

input QuickReplyValueCreateOrConnectWithoutQuickReplyInput {
  where: QuickReplyValueWhereUniqueInput!
  create: QuickReplyValueCreateWithoutQuickReplyInput!
}

input QuickReplyValueCreateManyQuickReplyInputEnvelope {
  data: [QuickReplyValueCreateManyQuickReplyInput!]!
  skipDuplicates: Boolean
}

input QuickReplyValueCreateManyQuickReplyInput {
  id: Int
  title: String
  value: String
}

input QuickReplyCreateOrConnectWithoutReplyInput {
  where: QuickReplyWhereUniqueInput!
  create: QuickReplyCreateWithoutReplyInput!
}

input ReplyCreateOrConnectWithoutSectionInput {
  where: ReplyWhereUniqueInput!
  create: ReplyCreateWithoutSectionInput!
}

input ReplyCreateManySectionInputEnvelope {
  data: [ReplyCreateManySectionInput!]!
  skipDuplicates: Boolean
}

input ReplyCreateManySectionInput {
  id: Int
  order: Float
  fileId: Int
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  actorId: Int
  quickReplyId: Int
}

input SectionCreateOrConnectWithoutCourseInput {
  where: SectionWhereUniqueInput!
  create: SectionCreateWithoutCourseInput!
}

input SectionCreateManyCourseInputEnvelope {
  data: [SectionCreateManyCourseInput!]!
  skipDuplicates: Boolean
}

input SectionCreateManyCourseInput {
  id: Int
  order: Float
  title: String!
  description: String
  imageId: Int
  type: TypeSection
  published: Boolean
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input CourseCreateOrConnectWithoutImageInput {
  where: CourseWhereUniqueInput!
  create: CourseCreateWithoutImageInput!
}

input FileCreateOrConnectWithoutReplyInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutReplyInput!
}

input ReplyCreateOrConnectWithoutUserInput {
  where: ReplyWhereUniqueInput!
  create: ReplyCreateWithoutUserInput!
}

input ReplyCreateManyUserInputEnvelope {
  data: [ReplyCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ReplyCreateManyUserInput {
  id: Int
  order: Float
  fileId: Int
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  sectionId: Int
  quickReplyId: Int
}

input ActorCreateOrConnectWithoutAvatarInput {
  where: ActorWhereUniqueInput!
  create: ActorCreateWithoutAvatarInput!
}

input FileCreateOrConnectWithoutSectionInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutSectionInput!
}

input SectionCreateOrConnectWithoutRepliesInput {
  where: SectionWhereUniqueInput!
  create: SectionCreateWithoutRepliesInput!
}

input ReplyCreateOrConnectWithoutFileInput {
  where: ReplyWhereUniqueInput!
  create: ReplyCreateWithoutFileInput!
}

input FileCreateOrConnectWithoutCourseAudioInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutCourseAudioInput!
}

input CourseUpdateInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  audio: FileUpdateOneWithoutCourseAudioInput
  image: FileUpdateOneWithoutCourseImageInput
  sections: SectionUpdateManyWithoutCourseInput
  author: UserUpdateOneWithoutCoursesInput
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input FileUpdateOneWithoutCourseAudioInput {
  create: FileCreateWithoutCourseAudioInput
  connectOrCreate: FileCreateOrConnectWithoutCourseAudioInput
  upsert: FileUpsertWithoutCourseAudioInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutCourseAudioInput
}

input FileUpsertWithoutCourseAudioInput {
  update: FileUpdateWithoutCourseAudioInput!
  create: FileCreateWithoutCourseAudioInput!
}

input FileUpdateWithoutCourseAudioInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutFileInput
  actor: ActorUpdateOneWithoutAvatarInput
  courseImage: CourseUpdateOneWithoutImageInput
  section: SectionUpdateOneWithoutImageInput
}

input NullableEnumTypeFileFieldUpdateOperationsInput {
  set: TypeFile
}

input ReplyUpdateOneWithoutFileInput {
  create: ReplyCreateWithoutFileInput
  connectOrCreate: ReplyCreateOrConnectWithoutFileInput
  upsert: ReplyUpsertWithoutFileInput
  disconnect: Boolean
  delete: Boolean
  connect: ReplyWhereUniqueInput
  update: ReplyUpdateWithoutFileInput
}

input ReplyUpsertWithoutFileInput {
  update: ReplyUpdateWithoutFileInput!
  create: ReplyCreateWithoutFileInput!
}

input ReplyUpdateWithoutFileInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  section: SectionUpdateOneWithoutRepliesInput
  user: ActorUpdateOneWithoutRepliesInput
  quickReply: QuickReplyUpdateOneWithoutReplyInput
}

input SectionUpdateOneWithoutRepliesInput {
  create: SectionCreateWithoutRepliesInput
  connectOrCreate: SectionCreateOrConnectWithoutRepliesInput
  upsert: SectionUpsertWithoutRepliesInput
  disconnect: Boolean
  delete: Boolean
  connect: SectionWhereUniqueInput
  update: SectionUpdateWithoutRepliesInput
}

input SectionUpsertWithoutRepliesInput {
  update: SectionUpdateWithoutRepliesInput!
  create: SectionCreateWithoutRepliesInput!
}

input SectionUpdateWithoutRepliesInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  image: FileUpdateOneWithoutSectionInput
  course: CourseUpdateOneWithoutSectionsInput
  author: UserUpdateOneWithoutSectionsInput
}

input NullableEnumTypeSectionFieldUpdateOperationsInput {
  set: TypeSection
}

input FileUpdateOneWithoutSectionInput {
  create: FileCreateWithoutSectionInput
  connectOrCreate: FileCreateOrConnectWithoutSectionInput
  upsert: FileUpsertWithoutSectionInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutSectionInput
}

input FileUpsertWithoutSectionInput {
  update: FileUpdateWithoutSectionInput!
  create: FileCreateWithoutSectionInput!
}

input FileUpdateWithoutSectionInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutFileInput
  actor: ActorUpdateOneWithoutAvatarInput
  courseImage: CourseUpdateOneWithoutImageInput
  courseAudio: CourseUpdateOneWithoutAudioInput
}

input ActorUpdateOneWithoutAvatarInput {
  create: ActorCreateWithoutAvatarInput
  connectOrCreate: ActorCreateOrConnectWithoutAvatarInput
  upsert: ActorUpsertWithoutAvatarInput
  disconnect: Boolean
  delete: Boolean
  connect: ActorWhereUniqueInput
  update: ActorUpdateWithoutAvatarInput
}

input ActorUpsertWithoutAvatarInput {
  update: ActorUpdateWithoutAvatarInput!
  create: ActorCreateWithoutAvatarInput!
}

input ActorUpdateWithoutAvatarInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  replies: ReplyUpdateManyWithoutUserInput
}

input ReplyUpdateManyWithoutUserInput {
  create: [ReplyCreateWithoutUserInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutUserInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutUserInput!]
  createMany: ReplyCreateManyUserInputEnvelope
  set: [ReplyWhereUniqueInput!]
  disconnect: [ReplyWhereUniqueInput!]
  delete: [ReplyWhereUniqueInput!]
  connect: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ReplyUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [ReplyScalarWhereInput!]
}

input ReplyUpsertWithWhereUniqueWithoutUserInput {
  where: ReplyWhereUniqueInput!
  update: ReplyUpdateWithoutUserInput!
  create: ReplyCreateWithoutUserInput!
}

input ReplyUpdateWithoutUserInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  file: FileUpdateOneWithoutReplyInput
  section: SectionUpdateOneWithoutRepliesInput
  quickReply: QuickReplyUpdateOneWithoutReplyInput
}

input FileUpdateOneWithoutReplyInput {
  create: FileCreateWithoutReplyInput
  connectOrCreate: FileCreateOrConnectWithoutReplyInput
  upsert: FileUpsertWithoutReplyInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutReplyInput
}

input FileUpsertWithoutReplyInput {
  update: FileUpdateWithoutReplyInput!
  create: FileCreateWithoutReplyInput!
}

input FileUpdateWithoutReplyInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  actor: ActorUpdateOneWithoutAvatarInput
  courseImage: CourseUpdateOneWithoutImageInput
  courseAudio: CourseUpdateOneWithoutAudioInput
  section: SectionUpdateOneWithoutImageInput
}

input CourseUpdateOneWithoutImageInput {
  create: CourseCreateWithoutImageInput
  connectOrCreate: CourseCreateOrConnectWithoutImageInput
  upsert: CourseUpsertWithoutImageInput
  disconnect: Boolean
  delete: Boolean
  connect: CourseWhereUniqueInput
  update: CourseUpdateWithoutImageInput
}

input CourseUpsertWithoutImageInput {
  update: CourseUpdateWithoutImageInput!
  create: CourseCreateWithoutImageInput!
}

input CourseUpdateWithoutImageInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  audio: FileUpdateOneWithoutCourseAudioInput
  sections: SectionUpdateManyWithoutCourseInput
  author: UserUpdateOneWithoutCoursesInput
}

input SectionUpdateManyWithoutCourseInput {
  create: [SectionCreateWithoutCourseInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutCourseInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutCourseInput!]
  createMany: SectionCreateManyCourseInputEnvelope
  set: [SectionWhereUniqueInput!]
  disconnect: [SectionWhereUniqueInput!]
  delete: [SectionWhereUniqueInput!]
  connect: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutCourseInput!]
  updateMany: [SectionUpdateManyWithWhereWithoutCourseInput!]
  deleteMany: [SectionScalarWhereInput!]
}

input SectionUpsertWithWhereUniqueWithoutCourseInput {
  where: SectionWhereUniqueInput!
  update: SectionUpdateWithoutCourseInput!
  create: SectionCreateWithoutCourseInput!
}

input SectionUpdateWithoutCourseInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  image: FileUpdateOneWithoutSectionInput
  replies: ReplyUpdateManyWithoutSectionInput
  author: UserUpdateOneWithoutSectionsInput
}

input ReplyUpdateManyWithoutSectionInput {
  create: [ReplyCreateWithoutSectionInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutSectionInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutSectionInput!]
  createMany: ReplyCreateManySectionInputEnvelope
  set: [ReplyWhereUniqueInput!]
  disconnect: [ReplyWhereUniqueInput!]
  delete: [ReplyWhereUniqueInput!]
  connect: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutSectionInput!]
  updateMany: [ReplyUpdateManyWithWhereWithoutSectionInput!]
  deleteMany: [ReplyScalarWhereInput!]
}

input ReplyUpsertWithWhereUniqueWithoutSectionInput {
  where: ReplyWhereUniqueInput!
  update: ReplyUpdateWithoutSectionInput!
  create: ReplyCreateWithoutSectionInput!
}

input ReplyUpdateWithoutSectionInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  file: FileUpdateOneWithoutReplyInput
  user: ActorUpdateOneWithoutRepliesInput
  quickReply: QuickReplyUpdateOneWithoutReplyInput
}

input ActorUpdateOneWithoutRepliesInput {
  create: ActorCreateWithoutRepliesInput
  connectOrCreate: ActorCreateOrConnectWithoutRepliesInput
  upsert: ActorUpsertWithoutRepliesInput
  disconnect: Boolean
  delete: Boolean
  connect: ActorWhereUniqueInput
  update: ActorUpdateWithoutRepliesInput
}

input ActorUpsertWithoutRepliesInput {
  update: ActorUpdateWithoutRepliesInput!
  create: ActorCreateWithoutRepliesInput!
}

input ActorUpdateWithoutRepliesInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  avatar: FileUpdateOneWithoutActorInput
}

input FileUpdateOneWithoutActorInput {
  create: FileCreateWithoutActorInput
  connectOrCreate: FileCreateOrConnectWithoutActorInput
  upsert: FileUpsertWithoutActorInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutActorInput
}

input FileUpsertWithoutActorInput {
  update: FileUpdateWithoutActorInput!
  create: FileCreateWithoutActorInput!
}

input FileUpdateWithoutActorInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutFileInput
  courseImage: CourseUpdateOneWithoutImageInput
  courseAudio: CourseUpdateOneWithoutAudioInput
  section: SectionUpdateOneWithoutImageInput
}

input CourseUpdateOneWithoutAudioInput {
  create: CourseCreateWithoutAudioInput
  connectOrCreate: CourseCreateOrConnectWithoutAudioInput
  upsert: CourseUpsertWithoutAudioInput
  disconnect: Boolean
  delete: Boolean
  connect: CourseWhereUniqueInput
  update: CourseUpdateWithoutAudioInput
}

input CourseUpsertWithoutAudioInput {
  update: CourseUpdateWithoutAudioInput!
  create: CourseCreateWithoutAudioInput!
}

input CourseUpdateWithoutAudioInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  image: FileUpdateOneWithoutCourseImageInput
  sections: SectionUpdateManyWithoutCourseInput
  author: UserUpdateOneWithoutCoursesInput
}

input FileUpdateOneWithoutCourseImageInput {
  create: FileCreateWithoutCourseImageInput
  connectOrCreate: FileCreateOrConnectWithoutCourseImageInput
  upsert: FileUpsertWithoutCourseImageInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutCourseImageInput
}

input FileUpsertWithoutCourseImageInput {
  update: FileUpdateWithoutCourseImageInput!
  create: FileCreateWithoutCourseImageInput!
}

input FileUpdateWithoutCourseImageInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutFileInput
  actor: ActorUpdateOneWithoutAvatarInput
  courseAudio: CourseUpdateOneWithoutAudioInput
  section: SectionUpdateOneWithoutImageInput
}

input SectionUpdateOneWithoutImageInput {
  create: SectionCreateWithoutImageInput
  connectOrCreate: SectionCreateOrConnectWithoutImageInput
  upsert: SectionUpsertWithoutImageInput
  disconnect: Boolean
  delete: Boolean
  connect: SectionWhereUniqueInput
  update: SectionUpdateWithoutImageInput
}

input SectionUpsertWithoutImageInput {
  update: SectionUpdateWithoutImageInput!
  create: SectionCreateWithoutImageInput!
}

input SectionUpdateWithoutImageInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  course: CourseUpdateOneWithoutSectionsInput
  replies: ReplyUpdateManyWithoutSectionInput
  author: UserUpdateOneWithoutSectionsInput
}

input CourseUpdateOneWithoutSectionsInput {
  create: CourseCreateWithoutSectionsInput
  connectOrCreate: CourseCreateOrConnectWithoutSectionsInput
  upsert: CourseUpsertWithoutSectionsInput
  disconnect: Boolean
  delete: Boolean
  connect: CourseWhereUniqueInput
  update: CourseUpdateWithoutSectionsInput
}

input CourseUpsertWithoutSectionsInput {
  update: CourseUpdateWithoutSectionsInput!
  create: CourseCreateWithoutSectionsInput!
}

input CourseUpdateWithoutSectionsInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  audio: FileUpdateOneWithoutCourseAudioInput
  image: FileUpdateOneWithoutCourseImageInput
  author: UserUpdateOneWithoutCoursesInput
}

input UserUpdateOneWithoutCoursesInput {
  create: UserCreateWithoutCoursesInput
  connectOrCreate: UserCreateOrConnectWithoutCoursesInput
  upsert: UserUpsertWithoutCoursesInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCoursesInput
}

input UserUpsertWithoutCoursesInput {
  update: UserUpdateWithoutCoursesInput!
  create: UserCreateWithoutCoursesInput!
}

input UserUpdateWithoutCoursesInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  apps: AppUpdateManyWithoutAuthorInput
  posts: PostUpdateManyWithoutAuthorInput
  sections: SectionUpdateManyWithoutAuthorInput
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input AppUpdateManyWithoutAuthorInput {
  create: [AppCreateWithoutAuthorInput!]
  connectOrCreate: [AppCreateOrConnectWithoutAuthorInput!]
  upsert: [AppUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: AppCreateManyAuthorInputEnvelope
  set: [AppWhereUniqueInput!]
  disconnect: [AppWhereUniqueInput!]
  delete: [AppWhereUniqueInput!]
  connect: [AppWhereUniqueInput!]
  update: [AppUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [AppUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [AppScalarWhereInput!]
}

input AppUpsertWithWhereUniqueWithoutAuthorInput {
  where: AppWhereUniqueInput!
  update: AppUpdateWithoutAuthorInput!
  create: AppCreateWithoutAuthorInput!
}

input AppUpdateWithoutAuthorInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppUpdateWithWhereUniqueWithoutAuthorInput {
  where: AppWhereUniqueInput!
  data: AppUpdateWithoutAuthorInput!
}

input AppUpdateManyWithWhereWithoutAuthorInput {
  where: AppScalarWhereInput!
  data: AppUpdateManyMutationInput!
}

input AppScalarWhereInput {
  AND: [AppScalarWhereInput!]
  OR: [AppScalarWhereInput!]
  NOT: [AppScalarWhereInput!]
  id: IntFilter
  name: StringNullableFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input AppUpdateManyMutationInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  connect: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorInput!
  create: PostCreateWithoutAuthorInput!
}

input PostUpdateWithoutAuthorInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorInput!
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  where: PostScalarWhereInput!
  data: PostUpdateManyMutationInput!
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  content: StringNullableFilter
  published: BoolNullableFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PostUpdateManyMutationInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SectionUpdateManyWithoutAuthorInput {
  create: [SectionCreateWithoutAuthorInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutAuthorInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: SectionCreateManyAuthorInputEnvelope
  set: [SectionWhereUniqueInput!]
  disconnect: [SectionWhereUniqueInput!]
  delete: [SectionWhereUniqueInput!]
  connect: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [SectionUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [SectionScalarWhereInput!]
}

input SectionUpsertWithWhereUniqueWithoutAuthorInput {
  where: SectionWhereUniqueInput!
  update: SectionUpdateWithoutAuthorInput!
  create: SectionCreateWithoutAuthorInput!
}

input SectionUpdateWithoutAuthorInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  image: FileUpdateOneWithoutSectionInput
  course: CourseUpdateOneWithoutSectionsInput
  replies: ReplyUpdateManyWithoutSectionInput
}

input SectionUpdateWithWhereUniqueWithoutAuthorInput {
  where: SectionWhereUniqueInput!
  data: SectionUpdateWithoutAuthorInput!
}

input SectionUpdateManyWithWhereWithoutAuthorInput {
  where: SectionScalarWhereInput!
  data: SectionUpdateManyMutationInput!
}

input SectionScalarWhereInput {
  AND: [SectionScalarWhereInput!]
  OR: [SectionScalarWhereInput!]
  NOT: [SectionScalarWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  description: StringNullableFilter
  imageId: IntNullableFilter
  type: EnumTypeSectionNullableFilter
  courseId: IntNullableFilter
  published: BoolNullableFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input SectionUpdateManyMutationInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  connectOrCreate: UserCreateOrConnectWithoutSectionsInput
  upsert: UserUpsertWithoutSectionsInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutSectionsInput
}

input UserUpsertWithoutSectionsInput {
  update: UserUpdateWithoutSectionsInput!
  create: UserCreateWithoutSectionsInput!
}

input UserUpdateWithoutSectionsInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  apps: AppUpdateManyWithoutAuthorInput
  posts: PostUpdateManyWithoutAuthorInput
  courses: CourseUpdateManyWithoutAuthorInput
}

input CourseUpdateManyWithoutAuthorInput {
  create: [CourseCreateWithoutAuthorInput!]
  connectOrCreate: [CourseCreateOrConnectWithoutAuthorInput!]
  upsert: [CourseUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: CourseCreateManyAuthorInputEnvelope
  set: [CourseWhereUniqueInput!]
  disconnect: [CourseWhereUniqueInput!]
  delete: [CourseWhereUniqueInput!]
  connect: [CourseWhereUniqueInput!]
  update: [CourseUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [CourseUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [CourseScalarWhereInput!]
}

input CourseUpsertWithWhereUniqueWithoutAuthorInput {
  where: CourseWhereUniqueInput!
  update: CourseUpdateWithoutAuthorInput!
  create: CourseCreateWithoutAuthorInput!
}

input CourseUpdateWithoutAuthorInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  audio: FileUpdateOneWithoutCourseAudioInput
  image: FileUpdateOneWithoutCourseImageInput
  sections: SectionUpdateManyWithoutCourseInput
}

input CourseUpdateWithWhereUniqueWithoutAuthorInput {
  where: CourseWhereUniqueInput!
  data: CourseUpdateWithoutAuthorInput!
}

input CourseUpdateManyWithWhereWithoutAuthorInput {
  where: CourseScalarWhereInput!
  data: CourseUpdateManyMutationInput!
}

input CourseScalarWhereInput {
  AND: [CourseScalarWhereInput!]
  OR: [CourseScalarWhereInput!]
  NOT: [CourseScalarWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  title: StringFilter
  description: StringNullableFilter
  audioId: IntNullableFilter
  imageId: IntNullableFilter
  published: BoolNullableFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input CourseUpdateManyMutationInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QuickReplyUpdateOneWithoutReplyInput {
  create: QuickReplyCreateWithoutReplyInput
  connectOrCreate: QuickReplyCreateOrConnectWithoutReplyInput
  upsert: QuickReplyUpsertWithoutReplyInput
  disconnect: Boolean
  delete: Boolean
  connect: QuickReplyWhereUniqueInput
  update: QuickReplyUpdateWithoutReplyInput
}

input QuickReplyUpsertWithoutReplyInput {
  update: QuickReplyUpdateWithoutReplyInput!
  create: QuickReplyCreateWithoutReplyInput!
}

input QuickReplyUpdateWithoutReplyInput {
  keepIt: NullableBoolFieldUpdateOperationsInput
  type: NullableEnumTypeReplyFieldUpdateOperationsInput
  values: QuickReplyValueUpdateManyWithoutQuickReplyInput
}

input NullableEnumTypeReplyFieldUpdateOperationsInput {
  set: TypeReply
}

input QuickReplyValueUpdateManyWithoutQuickReplyInput {
  create: [QuickReplyValueCreateWithoutQuickReplyInput!]
  connectOrCreate: [QuickReplyValueCreateOrConnectWithoutQuickReplyInput!]
  upsert: [QuickReplyValueUpsertWithWhereUniqueWithoutQuickReplyInput!]
  createMany: QuickReplyValueCreateManyQuickReplyInputEnvelope
  set: [QuickReplyValueWhereUniqueInput!]
  disconnect: [QuickReplyValueWhereUniqueInput!]
  delete: [QuickReplyValueWhereUniqueInput!]
  connect: [QuickReplyValueWhereUniqueInput!]
  update: [QuickReplyValueUpdateWithWhereUniqueWithoutQuickReplyInput!]
  updateMany: [QuickReplyValueUpdateManyWithWhereWithoutQuickReplyInput!]
  deleteMany: [QuickReplyValueScalarWhereInput!]
}

input QuickReplyValueUpsertWithWhereUniqueWithoutQuickReplyInput {
  where: QuickReplyValueWhereUniqueInput!
  update: QuickReplyValueUpdateWithoutQuickReplyInput!
  create: QuickReplyValueCreateWithoutQuickReplyInput!
}

input QuickReplyValueUpdateWithoutQuickReplyInput {
  title: NullableStringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
}

input QuickReplyValueUpdateWithWhereUniqueWithoutQuickReplyInput {
  where: QuickReplyValueWhereUniqueInput!
  data: QuickReplyValueUpdateWithoutQuickReplyInput!
}

input QuickReplyValueUpdateManyWithWhereWithoutQuickReplyInput {
  where: QuickReplyValueScalarWhereInput!
  data: QuickReplyValueUpdateManyMutationInput!
}

input QuickReplyValueScalarWhereInput {
  AND: [QuickReplyValueScalarWhereInput!]
  OR: [QuickReplyValueScalarWhereInput!]
  NOT: [QuickReplyValueScalarWhereInput!]
  id: IntFilter
  title: StringNullableFilter
  value: StringNullableFilter
  quickReplyId: IntNullableFilter
}

input QuickReplyValueUpdateManyMutationInput {
  title: NullableStringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
}

input ReplyUpdateWithWhereUniqueWithoutSectionInput {
  where: ReplyWhereUniqueInput!
  data: ReplyUpdateWithoutSectionInput!
}

input ReplyUpdateManyWithWhereWithoutSectionInput {
  where: ReplyScalarWhereInput!
  data: ReplyUpdateManyMutationInput!
}

input ReplyScalarWhereInput {
  AND: [ReplyScalarWhereInput!]
  OR: [ReplyScalarWhereInput!]
  NOT: [ReplyScalarWhereInput!]
  id: IntFilter
  order: FloatNullableFilter
  fileId: IntNullableFilter
  text: StringNullableFilter
  reply: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  sectionId: IntNullableFilter
  actorId: IntNullableFilter
  quickReplyId: IntNullableFilter
}

input ReplyUpdateManyMutationInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SectionUpdateWithWhereUniqueWithoutCourseInput {
  where: SectionWhereUniqueInput!
  data: SectionUpdateWithoutCourseInput!
}

input SectionUpdateManyWithWhereWithoutCourseInput {
  where: SectionScalarWhereInput!
  data: SectionUpdateManyMutationInput!
}

input ReplyUpdateWithWhereUniqueWithoutUserInput {
  where: ReplyWhereUniqueInput!
  data: ReplyUpdateWithoutUserInput!
}

input ReplyUpdateManyWithWhereWithoutUserInput {
  where: ReplyScalarWhereInput!
  data: ReplyUpdateManyMutationInput!
}

input UserCreateInput {
  email: String!
  username: String
  name: String
  password: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  apps: AppCreateNestedManyWithoutAuthorInput
  posts: PostCreateNestedManyWithoutAuthorInput
  courses: CourseCreateNestedManyWithoutAuthorInput
  sections: SectionCreateNestedManyWithoutAuthorInput
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  apps: AppUpdateManyWithoutAuthorInput
  posts: PostUpdateManyWithoutAuthorInput
  courses: CourseUpdateManyWithoutAuthorInput
  sections: SectionUpdateManyWithoutAuthorInput
}

input PostCreateInput {
  order: Float
  title: String!
  content: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutPostsInput
}

input UserCreateNestedOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPostsInput {
  email: String!
  username: String
  name: String
  password: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  apps: AppCreateNestedManyWithoutAuthorInput
  courses: CourseCreateNestedManyWithoutAuthorInput
  sections: SectionCreateNestedManyWithoutAuthorInput
}

input UserCreateOrConnectWithoutPostsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPostsInput!
}

input PostUpdateInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutPostsInput
}

input UserUpdateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutPostsInput
}

input UserUpsertWithoutPostsInput {
  update: UserUpdateWithoutPostsInput!
  create: UserCreateWithoutPostsInput!
}

input UserUpdateWithoutPostsInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  apps: AppUpdateManyWithoutAuthorInput
  courses: CourseUpdateManyWithoutAuthorInput
  sections: SectionUpdateManyWithoutAuthorInput
}

input FileCreateInput {
  name: String
  link: String
  location: String
  key: String
  bucket: String
  etag: String
  createdAt: DateTime
  updatedAt: DateTime
  type: TypeFile
  reply: ReplyCreateNestedOneWithoutFileInput
  actor: ActorCreateNestedOneWithoutAvatarInput
  courseImage: CourseCreateNestedOneWithoutImageInput
  courseAudio: CourseCreateNestedOneWithoutAudioInput
  section: SectionCreateNestedOneWithoutImageInput
}

input FileUpdateInput {
  name: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  bucket: NullableStringFieldUpdateOperationsInput
  etag: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: NullableEnumTypeFileFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutFileInput
  actor: ActorUpdateOneWithoutAvatarInput
  courseImage: CourseUpdateOneWithoutImageInput
  courseAudio: CourseUpdateOneWithoutAudioInput
  section: SectionUpdateOneWithoutImageInput
}

input ActorCreateInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  avatar: FileCreateNestedOneWithoutActorInput
  replies: ReplyCreateNestedManyWithoutUserInput
}

input ActorUpdateInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  avatar: FileUpdateOneWithoutActorInput
  replies: ReplyUpdateManyWithoutUserInput
}

input SectionCreateInput {
  order: Float
  title: String!
  description: String
  type: TypeSection
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  image: FileCreateNestedOneWithoutSectionInput
  course: CourseCreateNestedOneWithoutSectionsInput
  replies: ReplyCreateNestedManyWithoutSectionInput
  author: UserCreateNestedOneWithoutSectionsInput
}

input SectionUpdateInput {
  order: NullableFloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTypeSectionFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  image: FileUpdateOneWithoutSectionInput
  course: CourseUpdateOneWithoutSectionsInput
  replies: ReplyUpdateManyWithoutSectionInput
  author: UserUpdateOneWithoutSectionsInput
}

input ReplyCreateInput {
  order: Float
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  file: FileCreateNestedOneWithoutReplyInput
  section: SectionCreateNestedOneWithoutRepliesInput
  user: ActorCreateNestedOneWithoutRepliesInput
  quickReply: QuickReplyCreateNestedOneWithoutReplyInput
}

input ReplyUpdateInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  file: FileUpdateOneWithoutReplyInput
  section: SectionUpdateOneWithoutRepliesInput
  user: ActorUpdateOneWithoutRepliesInput
  quickReply: QuickReplyUpdateOneWithoutReplyInput
}

input QuickReplyCreateInput {
  keepIt: Boolean
  type: TypeReply
  reply: ReplyCreateNestedOneWithoutQuickReplyInput
  values: QuickReplyValueCreateNestedManyWithoutQuickReplyInput
}

input ReplyCreateNestedOneWithoutQuickReplyInput {
  create: ReplyCreateWithoutQuickReplyInput
  connectOrCreate: ReplyCreateOrConnectWithoutQuickReplyInput
  connect: ReplyWhereUniqueInput
}

input ReplyCreateWithoutQuickReplyInput {
  order: Float
  text: String
  reply: String
  createdAt: DateTime
  updatedAt: DateTime
  file: FileCreateNestedOneWithoutReplyInput
  section: SectionCreateNestedOneWithoutRepliesInput
  user: ActorCreateNestedOneWithoutRepliesInput
}

input ReplyCreateOrConnectWithoutQuickReplyInput {
  where: ReplyWhereUniqueInput!
  create: ReplyCreateWithoutQuickReplyInput!
}

input QuickReplyUpdateInput {
  keepIt: NullableBoolFieldUpdateOperationsInput
  type: NullableEnumTypeReplyFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutQuickReplyInput
  values: QuickReplyValueUpdateManyWithoutQuickReplyInput
}

input ReplyUpdateOneWithoutQuickReplyInput {
  create: ReplyCreateWithoutQuickReplyInput
  connectOrCreate: ReplyCreateOrConnectWithoutQuickReplyInput
  upsert: ReplyUpsertWithoutQuickReplyInput
  disconnect: Boolean
  delete: Boolean
  connect: ReplyWhereUniqueInput
  update: ReplyUpdateWithoutQuickReplyInput
}

input ReplyUpsertWithoutQuickReplyInput {
  update: ReplyUpdateWithoutQuickReplyInput!
  create: ReplyCreateWithoutQuickReplyInput!
}

input ReplyUpdateWithoutQuickReplyInput {
  order: NullableFloatFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  file: FileUpdateOneWithoutReplyInput
  section: SectionUpdateOneWithoutRepliesInput
  user: ActorUpdateOneWithoutRepliesInput
}

input QuickReplyValueCreateInput {
  title: String
  value: String
  quickReply: QuickReplyCreateNestedOneWithoutValuesInput
}

input QuickReplyCreateNestedOneWithoutValuesInput {
  create: QuickReplyCreateWithoutValuesInput
  connectOrCreate: QuickReplyCreateOrConnectWithoutValuesInput
  connect: QuickReplyWhereUniqueInput
}

input QuickReplyCreateWithoutValuesInput {
  keepIt: Boolean
  type: TypeReply
  reply: ReplyCreateNestedOneWithoutQuickReplyInput
}

input QuickReplyCreateOrConnectWithoutValuesInput {
  where: QuickReplyWhereUniqueInput!
  create: QuickReplyCreateWithoutValuesInput!
}

input QuickReplyValueUpdateInput {
  title: NullableStringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
  quickReply: QuickReplyUpdateOneWithoutValuesInput
}

input QuickReplyUpdateOneWithoutValuesInput {
  create: QuickReplyCreateWithoutValuesInput
  connectOrCreate: QuickReplyCreateOrConnectWithoutValuesInput
  upsert: QuickReplyUpsertWithoutValuesInput
  disconnect: Boolean
  delete: Boolean
  connect: QuickReplyWhereUniqueInput
  update: QuickReplyUpdateWithoutValuesInput
}

input QuickReplyUpsertWithoutValuesInput {
  update: QuickReplyUpdateWithoutValuesInput!
  create: QuickReplyCreateWithoutValuesInput!
}

input QuickReplyUpdateWithoutValuesInput {
  keepIt: NullableBoolFieldUpdateOperationsInput
  type: NullableEnumTypeReplyFieldUpdateOperationsInput
  reply: ReplyUpdateOneWithoutQuickReplyInput
}

input AppCreateInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutAppsInput
}

input UserCreateNestedOneWithoutAppsInput {
  create: UserCreateWithoutAppsInput
  connectOrCreate: UserCreateOrConnectWithoutAppsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAppsInput {
  email: String!
  username: String
  name: String
  password: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  posts: PostCreateNestedManyWithoutAuthorInput
  courses: CourseCreateNestedManyWithoutAuthorInput
  sections: SectionCreateNestedManyWithoutAuthorInput
}

input UserCreateOrConnectWithoutAppsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutAppsInput!
}

input AppUpdateInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutAppsInput
}

input UserUpdateOneWithoutAppsInput {
  create: UserCreateWithoutAppsInput
  connectOrCreate: UserCreateOrConnectWithoutAppsInput
  upsert: UserUpsertWithoutAppsInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAppsInput
}

input UserUpsertWithoutAppsInput {
  update: UserUpdateWithoutAppsInput!
  create: UserCreateWithoutAppsInput!
}

input UserUpdateWithoutAppsInput {
  email: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  courses: CourseUpdateManyWithoutAuthorInput
  sections: SectionUpdateManyWithoutAuthorInput
}
